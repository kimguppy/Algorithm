1).해당 문제 해결 기법을 사용한 근거 (논리적인 근거)
① 문제인식
첫째 줄에는 지도의 세로의 크기 M과 가로의 크기 N이 빈칸을 사이에 두고 주어진다. 
이어 다음 M개 줄에 걸쳐 한 줄에 N개씩 위에서부터 차례로 각 지점의 높이가 빈 칸을 사이에 두고 주어진다.
M과 N은 각각 500이하의 자연수이고, 
각 지점의 높이는 10000이하의 자연수이다.

② 문제 유형 파악:
이 지도는 직사각형 모양이며 여러 칸으로 나뉘어져 있다. 
한 칸은 한 지점을 나타내는데 각 칸에는 그 지점의 높이가 쓰여 있으며, 각 지점 사이의 이동은 지도에서 상하좌우 이웃한 곳끼리만 가능하다.

현재 제일 왼쪽 위 칸이 나타내는 지점에 있는 세준이는 제일 오른쪽 아래 칸이 나타내는 지점으로 가려고 한다. 
그런데 가능한 힘을 적게 들이고 싶어 항상 높이가 더 낮은 지점으로만 이동하여 목표 지점까지 가고자 한다

=> 깊이우선탐색

2). 의사 코드 또는 DFA 다이어그램 작성 (대략적으로 작성)
➀  순서대로 좌 하 우 상 이동
    int[] rangeX = { -1, 0, 1, 0 };
	int[] rangeY = { 0, 1, 0, -1 };

➁ arr[x][y]보다 arr[dx][dy]가 높이가 더 낮다면 arr[dx][dy]에서 끝점까지 도달하는 경로의 개수를 더한다.
if (arr[x][y] > arr[dx][dy]) {
    dp[x][y] += DFS(dx, dy);
}
➂  dp = new int[M + 1][N + 1]; //(x, y)에서 도착점으로 가는 경로의 개수